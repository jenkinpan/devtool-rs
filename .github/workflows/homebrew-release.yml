name: Homebrew Release

on:
  release:
    types: [published]

jobs:
  build-and-release:
    name: Build and Release for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: devtool
            asset_name: devtool-aarch64-apple-darwin.tar.gz
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: devtool
            asset_name: devtool-x86_64-apple-darwin.tar.gz
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: devtool
            asset_name: devtool-x86_64-unknown-linux-gnu.tar.gz
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: devtool
            asset_name: devtool-aarch64-unknown-linux-gnu.tar.gz

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
          fi
          cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ${{ matrix.asset_name }} ${{ matrix.artifact_name }}
          cd -
          mv target/${{ matrix.target }}/release/${{ matrix.asset_name }} .

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.asset_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate SHA256
        id: sha256
        run: |
          SHA256=$(shasum -a 256 ${{ matrix.asset_name }} | cut -d ' ' -f 1)
          echo "sha256=$SHA256" >> $GITHUB_OUTPUT
          echo "SHA256 for ${{ matrix.asset_name }}: $SHA256"

      - name: Save SHA256 to artifact
        run: |
          echo "${{ steps.sha256.outputs.sha256 }}" > ${{ matrix.target }}.sha256

      - name: Upload SHA256 artifact
        uses: actions/upload-artifact@v3
        with:
          name: sha256-${{ matrix.target }}
          path: ${{ matrix.target }}.sha256

  update-homebrew-tap:
    name: Update Homebrew Tap
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Download all SHA256 artifacts
        uses: actions/download-artifact@v3

      - name: Read SHA256 values
        id: sha256
        run: |
          ARM64_MACOS=$(cat sha256-aarch64-apple-darwin/aarch64-apple-darwin.sha256)
          X86_64_MACOS=$(cat sha256-x86_64-apple-darwin/x86_64-apple-darwin.sha256)
          ARM64_LINUX=$(cat sha256-aarch64-unknown-linux-gnu/aarch64-unknown-linux-gnu.sha256)
          X86_64_LINUX=$(cat sha256-x86_64-unknown-linux-gnu/x86_64-unknown-linux-gnu.sha256)

          echo "arm64_macos=$ARM64_MACOS" >> $GITHUB_OUTPUT
          echo "x86_64_macos=$X86_64_MACOS" >> $GITHUB_OUTPUT
          echo "arm64_linux=$ARM64_LINUX" >> $GITHUB_OUTPUT
          echo "x86_64_linux=$X86_64_LINUX" >> $GITHUB_OUTPUT

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Checkout tap repository
        uses: actions/checkout@v4
        with:
          repository: jenkinpan/homebrew-tap
          ssh-key: ${{ secrets.TAP_DEPLOY_KEY }}
          path: homebrew-tap

      - name: Update formula
        env:
          VERSION: ${{ steps.version.outputs.version }}
          SHA256_ARM64_MACOS: ${{ steps.sha256.outputs.arm64_macos }}
          SHA256_X86_64_MACOS: ${{ steps.sha256.outputs.x86_64_macos }}
          SHA256_ARM64_LINUX: ${{ steps.sha256.outputs.arm64_linux }}
          SHA256_X86_64_LINUX: ${{ steps.sha256.outputs.x86_64_linux }}
        run: |
          cd homebrew-tap
          cat > Formula/devtool.rb << 'EOF'
          class Devtool < Formula
            desc "CLI tool for development to update rustup toolchain, mise maintained tools and homebrew packages"
            homepage "https://github.com/jenkinpan/devtool-rs"
            version "VERSION_PLACEHOLDER"
            license "MIT OR Apache-2.0"

            if OS.mac?
              if Hardware::CPU.arm?
                url "https://github.com/jenkinpan/devtool-rs/releases/download/vVERSION_PLACEHOLDER/devtool-aarch64-apple-darwin.tar.gz"
                sha256 "SHA256_ARM64_MACOS_PLACEHOLDER"
              else
                url "https://github.com/jenkinpan/devtool-rs/releases/download/vVERSION_PLACEHOLDER/devtool-x86_64-apple-darwin.tar.gz"
                sha256 "SHA256_X86_64_MACOS_PLACEHOLDER"
              end
            elsif OS.linux?
              if Hardware::CPU.arm?
                url "https://github.com/jenkinpan/devtool-rs/releases/download/vVERSION_PLACEHOLDER/devtool-aarch64-unknown-linux-gnu.tar.gz"
                sha256 "SHA256_ARM64_LINUX_PLACEHOLDER"
              else
                url "https://github.com/jenkinpan/devtool-rs/releases/download/vVERSION_PLACEHOLDER/devtool-x86_64-unknown-linux-gnu.tar.gz"
                sha256 "SHA256_X86_64_LINUX_PLACEHOLDER"
              end
            end

            def install
              bin.install "devtool"
            end

            test do
              assert_match "devtool VERSION_PLACEHOLDER", shell_output("#{bin}/devtool --version")
            end
          end
          EOF

          sed -i "s/VERSION_PLACEHOLDER/$VERSION/g" Formula/devtool.rb
          sed -i "s/SHA256_ARM64_MACOS_PLACEHOLDER/$SHA256_ARM64_MACOS/g" Formula/devtool.rb
          sed -i "s/SHA256_X86_64_MACOS_PLACEHOLDER/$SHA256_X86_64_MACOS/g" Formula/devtool.rb
          sed -i "s/SHA256_ARM64_LINUX_PLACEHOLDER/$SHA256_ARM64_LINUX/g" Formula/devtool.rb
          sed -i "s/SHA256_X86_64_LINUX_PLACEHOLDER/$SHA256_X86_64_LINUX/g" Formula/devtool.rb

      - name: Commit and push changes
        run: |
          cd homebrew-tap
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/devtool.rb
          git commit -m "chore: update devtool to v${{ steps.version.outputs.version }}" || echo "No changes to commit"
          git push origin main || git push origin master
